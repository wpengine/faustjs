schema: ../../wpgraphql-schema.graphql
documents: "src/**/!(*.d).{ts,tsx}"
generates:
  src/types/wpgraphql.d.ts:
    plugins:
     - typescript
     - typescript-operations:
         # Operations explicitly ask for fields so keeping the optionals requires a lot of massaging to get all type
         # errors to go away.
         avoidOptionals: true
     - add:
         content: |
           /* eslint-disable */
           /**
            * Important note! This file is auto-generated using graphql-codegen and based on wpgraphql-schema.graphql
            * in the root of the project. Additionally, packages/headless will be scanned for
            * operations (queries, mutations, etc) and types will be generated for them as well.
            *
            * This file can be manually regenerated using `npm run generate-graphql`
            */
           declare namespace WPGraphQL {
     - add:
         placement: 'append'
         content: '}'
    config:
      # Rely on TypeScript optionals instead of Maybe<T> which causes more trouble than it's worth.
      maybeValue: T
      # __typename is not needed in the codebase. This reduces clutter.
      skipTypename: true
      # This improves readability of types as Pick<T> is used less frequently
      preResolveTypes: true
      # Need to be loaded during runtime which increases bundle size
      enumsAsTypes: true
