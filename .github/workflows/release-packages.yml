name: Release Packages

on:
  push:
    branches:
      - canary

jobs:
  release_packages:
    name: ReleaseÂ Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 16.x
        uses: actions/setup-node@master
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm ci

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npm run release
          version: npm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Possibly deploy WordPress plugin
        # Checks the changesets publishedPackages output
        # If there is a published package named "@faustwp/wordpress-plugin"
        # Then deploy the WordPress plugin
        # https://github.com/changesets/action#outputs
        if: contains(fromJSON(steps.changesets.outputs.publishedPackages).*.name, '@faustwp/wordpress-plugin')
        # Use a variant of 10up/action-wordpress-plugin-deploy that allows us to specify a PLUGIN_DIR
        # to support our monorepo structure.
        uses: ./.github/actions/release-plugin
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          PLUGIN_DIR: plugins/faustwp
          SLUG: faustwp
